[{"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\index.tsx":"1","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\reportWebVitals.ts":"2","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\App.tsx":"3","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\index.tsx":"4","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\index.tsx":"5","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\Styles.tsx":"6","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\index.tsx":"7","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\routes\\index.tsx":"8","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\shared\\GlobalStyles.ts":"9","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\navLinks.ts":"10","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\shared\\animation.ts":"11","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Wave\\index.tsx":"12","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Wave\\Styles.tsx":"13","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\PageTransition\\index.tsx":"14","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Toggle\\index.tsx":"15","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\hooks\\index.tsx":"16","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\hooks\\useScroll\\index.tsx":"17","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\WorkDetails\\index.tsx":"18","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\ScrollTop\\index.tsx":"19","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Banner\\index.tsx":"20","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Parallax\\index.tsx":"21","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\About\\index.tsx":"22","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\index.tsx":"23","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\MyWork\\index.tsx":"24","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\MyWork\\Work.tsx":"25","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\ContactUs\\index.tsx":"26","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\AboutMe\\index.tsx":"27","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\AboutMe\\Services\\index.tsx":"28","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\AboutMe\\Services\\Styles.tsx":"29","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\WorkDetails\\Styles.ts":"30","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\MyWork\\Styles.ts":"31","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\PageSlider\\index.tsx":"32","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Button\\index.tsx":"33","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Card\\index.tsx":"34","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Image\\index.tsx":"35","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Shadow\\index.tsx":"36","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Divider\\index.tsx":"37"},{"size":910,"mtime":1610925234400,"results":"38","hashOfConfig":"39"},{"size":425,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":366,"mtime":1628020360197,"results":"41","hashOfConfig":"39"},{"size":614,"mtime":1628235688481,"results":"42","hashOfConfig":"39"},{"size":818,"mtime":1627798234092,"results":"43","hashOfConfig":"39"},{"size":1046,"mtime":1627959997971,"results":"44","hashOfConfig":"39"},{"size":146,"mtime":1627786293857,"results":"45","hashOfConfig":"39"},{"size":764,"mtime":1627962559193,"results":"46","hashOfConfig":"39"},{"size":1873,"mtime":1628121937155,"results":"47","hashOfConfig":"39"},{"size":275,"mtime":1611268567610,"results":"48","hashOfConfig":"39"},{"size":3202,"mtime":1628235019736,"results":"49","hashOfConfig":"39"},{"size":720,"mtime":1628228025866,"results":"50","hashOfConfig":"39"},{"size":176,"mtime":1628238013472,"results":"51","hashOfConfig":"39"},{"size":684,"mtime":1628198933452,"results":"52","hashOfConfig":"39"},{"size":586,"mtime":1627587403918,"results":"53","hashOfConfig":"39"},{"size":63,"mtime":1611369615791,"results":"54","hashOfConfig":"39"},{"size":554,"mtime":1627850196801,"results":"55","hashOfConfig":"39"},{"size":1269,"mtime":1628104661879,"results":"56","hashOfConfig":"39"},{"size":305,"mtime":1611609640519,"results":"57","hashOfConfig":"39"},{"size":1775,"mtime":1627676113094,"results":"58","hashOfConfig":"39"},{"size":1607,"mtime":1627596712833,"results":"59","hashOfConfig":"39"},{"size":2022,"mtime":1628236031690,"results":"60","hashOfConfig":"39"},{"size":807,"mtime":1627963420601,"results":"61","hashOfConfig":"39"},{"size":6053,"mtime":1628240396225,"results":"62","hashOfConfig":"39"},{"size":1129,"mtime":1628101117483,"results":"63","hashOfConfig":"39"},{"size":1768,"mtime":1628236042806,"results":"64","hashOfConfig":"39"},{"size":516,"mtime":1627963321088,"results":"65","hashOfConfig":"39"},{"size":2013,"mtime":1627796144925,"results":"66","hashOfConfig":"39"},{"size":637,"mtime":1627796133212,"results":"67","hashOfConfig":"39"},{"size":491,"mtime":1627790562741,"results":"68","hashOfConfig":"39"},{"size":800,"mtime":1627954203265,"results":"69","hashOfConfig":"39"},{"size":3621,"mtime":1628226959733,"results":"70","hashOfConfig":"39"},{"size":1367,"mtime":1628236386315,"results":"71","hashOfConfig":"39"},{"size":3419,"mtime":1628240545635,"results":"72","hashOfConfig":"39"},{"size":613,"mtime":1628204543298,"results":"73","hashOfConfig":"39"},{"size":497,"mtime":1628135206265,"results":"74","hashOfConfig":"39"},{"size":562,"mtime":1628236672249,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"a4yxhs",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\index.tsx",[],["159","160"],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\reportWebVitals.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\App.tsx",["161"],"import Routes from \"./routes\";\nimport { Navbar, ScrollTop, Wave } from \"./components\";\nimport GlobalStyle from \"./shared/GlobalStyles\";\n\nfunction App() {\n  console.log(process.env.NODE_ENV);\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Navbar />\n      <Wave />\n      {/* <ScrollTop /> */}\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\Styles.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\routes\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\shared\\GlobalStyles.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\navLinks.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\shared\\animation.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Wave\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Wave\\Styles.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\PageTransition\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Toggle\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\hooks\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\hooks\\useScroll\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\WorkDetails\\index.tsx",["162"],"import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { projects } from \"../Home/MyWork\";\r\nimport { IProject } from \"../Home/MyWork/types\";\r\nimport { Details, HeadLine, Description } from \"./Styles\";\r\nimport { pageAnimation } from \"../../shared/animation\";\r\n\r\nconst WorkDetails: React.FC = () => {\r\n  const { id } = useParams<Record<string, string>>();\r\n  const [myProjects, setProjects] = useState<Array<IProject>>();\r\n  const [currentProject, setCurrentProject] = useState<IProject>();\r\n\r\n  useEffect(() => {\r\n    setProjects(projects);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (myProjects) {\r\n      setCurrentProject(myProjects?.find((project) => project.id === id));\r\n    }\r\n  }, [myProjects, id]);\r\n\r\n  if (!myProjects) return null;\r\n\r\n  return (\r\n    <Details\r\n      variants={pageAnimation}\r\n      initial=\"hidden\"\r\n      animate=\"show\"\r\n      exit=\"exit\"\r\n      data-testid=\"project-details-section\"\r\n    >\r\n      <HeadLine>\r\n        <h2>{currentProject?.title}</h2>\r\n        <img src={currentProject?.image.src} alt={currentProject?.image.alt} />\r\n      </HeadLine>\r\n      <Description>\r\n        <p>{currentProject?.description}</p>\r\n      </Description>\r\n    </Details>\r\n  );\r\n};\r\n\r\nexport default WorkDetails;\r\n","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\ScrollTop\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Banner\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Parallax\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\About\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\MyWork\\index.tsx",["163","164"],"import { PageSlider, Card, Button, Divider } from \"../../../components\";\r\nimport Work from \"./Work\";\r\nimport {\r\n  fade,\r\n  fullpageAnimation,\r\n  lineAnim,\r\n  photoAnim,\r\n  titleAnim,\r\n} from \"../../../shared/animation\";\r\nimport { IProject } from \"./types\";\r\nimport { useScroll } from \"../../../hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport athlete from \"../../../assets/img/athlete-small.png\";\r\nimport theracer from \"../../../assets/img/theracer-small.png\";\r\nimport { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n// TODO: change to include personal projects\r\nexport const projects: IProject[] = [\r\n  {\r\n    id: \"athlete\",\r\n    title: \"The Athlete\",\r\n    themeColor: \"#ff0055\",\r\n    techStack: [\r\n      \"react\",\r\n      \"typescript\",\r\n      \"styled components\",\r\n      \"jest/react-testing-library\",\r\n      \"accessibility\",\r\n      \"webpack\",\r\n    ],\r\n    image: {\r\n      src: athlete,\r\n      alt: \"athlete\",\r\n    },\r\n    preview: \"This is a preview project\",\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n  },\r\n  {\r\n    id: \"racer\",\r\n    title: \"The Racer\",\r\n    themeColor: \"#0099ff\",\r\n    techStack: [\r\n      \"react\",\r\n      \"typescript\",\r\n      \"styled components\",\r\n      \"jest/react-testing-library\",\r\n      \"accessibility\",\r\n      \"webpack\",\r\n    ],\r\n    image: {\r\n      src: theracer,\r\n      alt: \"racer\",\r\n    },\r\n    preview: \"This is a preview project\",\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n  },\r\n];\r\n\r\nconst MyWork = () => {\r\n  const [ref, controls] = useScroll();\r\n  const history = useHistory();\r\n  const [selected, setSelected] = useState(projects[0].id);\r\n\r\n  return (\r\n    <PageSlider\r\n      ref={ref}\r\n      variants={fullpageAnimation}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n    >\r\n      <PageSlider.Title>\r\n        <PageSlider.Header variants={titleAnim}>Projects</PageSlider.Header>\r\n        <PageSlider.Text variants={fade}>Most recent work</PageSlider.Text>\r\n      </PageSlider.Title>\r\n      <PageSlider.Content\r\n        animate={controls}\r\n        initial=\"hidden\"\r\n        variants={photoAnim}\r\n      >\r\n        <Card.Container>\r\n          {projects?.map(({ title, image, id, preview, themeColor }) => {\r\n            const isSelected = selected === id;\r\n            return (\r\n              <Card\r\n                key={id}\r\n                id={id}\r\n                color={themeColor}\r\n                // style={{ border: `3px solid ${themeColor}` }}\r\n                isSelected={isSelected}\r\n                image={image}\r\n                onMouseOver={() => setSelected(id)}\r\n                animate={isSelected ? \"show\" : \"hidden\"}\r\n                initial=\"hidden\"\r\n                variants={{\r\n                  hidden: {\r\n                    // scale: 1,\r\n                    transition: {\r\n                      // duration: 0.1,\r\n                      type: \"spring\",\r\n                      stiffness: 500,\r\n                      damping: 30,\r\n                    },\r\n                  },\r\n                  show: {\r\n                    // scale: 1.02,\r\n                    borderColor: themeColor,\r\n                    transition: {\r\n                      // duration: 0.1,\r\n                      type: \"spring\",\r\n                      stiffness: 500,\r\n                      damping: 30,\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                {isSelected && (\r\n                  <>\r\n                    {/* <motion.div className=\"outline\"></motion.div> */}\r\n                    <Card.Content\r\n                      classes=\"outline\"\r\n                      layoutId=\"outline\"\r\n                      animate={{ borderColor: themeColor }}\r\n                      transition={{\r\n                        type: \"spring\",\r\n                        stiffness: 500,\r\n                        damping: 30,\r\n                      }}\r\n                    >\r\n                      <Card.Header>{title}</Card.Header>\r\n                      <Divider color={themeColor} variants={lineAnim} />\r\n                      <Card.Body>{preview}</Card.Body>\r\n                      <Button\r\n                        color={themeColor}\r\n                        onClick={() => history.push(`work/${id}`)}\r\n                      >\r\n                        Learn more\r\n                      </Button>\r\n                    </Card.Content>\r\n                  </>\r\n                )}\r\n              </Card>\r\n            );\r\n          })}\r\n        </Card.Container>\r\n      </PageSlider.Content>\r\n      {/* <WorkSection\r\n        variants={pageAnimation}\r\n        layout=\"position\"\r\n        initial=\"hidden\"\r\n        animate=\"show\"\r\n        exit=\"exit\"\r\n        data-testid=\"mywork-section\"\r\n      >\r\n        {projects?.map(({ title, mainImg, id, techStack }) => (\r\n          <Work title={title} mainImg={mainImg} id={id} techStack={techStack} />\r\n        ))}\r\n      </WorkSection> */}\r\n    </PageSlider>\r\n  );\r\n};\r\n\r\nexport default MyWork;\r\n","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\MyWork\\Work.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\ContactUs\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\AboutMe\\index.tsx",["165","166"],"import { Banner } from \"../../components\";\r\nimport { pageAnimation } from \"../../shared/animation\";\r\nimport { Details, HeadLine } from \"../WorkDetails/Styles\";\r\nimport Services from \"./Services\";\r\n\r\nconst AboutMe = () => {\r\n  return (\r\n    <Details\r\n      variants={pageAnimation}\r\n      initial=\"hidden\"\r\n      animate=\"show\"\r\n      exit=\"exit\"\r\n      data-testid=\"project-details-section\"\r\n    >\r\n      <HeadLine>\r\n        <h2>About Me</h2>\r\n      </HeadLine>\r\n    </Details>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\AboutMe\\Services\\index.tsx",["167","168","169"],"import home2 from \"../../../assets/img/home2.png\";\r\nimport { StyledServices, StyledCards, StyledCard } from \"./Styles\";\r\nimport { scrollFade } from \"../../../shared/animation\";\r\nimport { useScroll } from \"../../../hooks\";\r\n\r\nimport clock from \"../../../assets/img/clock.svg\";\r\nimport diaphragm from \"../../../assets/img/diaphragm.svg\";\r\nimport money from \"../../../assets/img/money.svg\";\r\nimport teamwork from \"../../../assets/img/teamwork.svg\";\r\n\r\nexport interface IService {\r\n  img: string;\r\n  title: string;\r\n  paragraph: string;\r\n}\r\n\r\nexport const services: IService[] = [\r\n  {\r\n    img: clock,\r\n    title: \"Efficient\",\r\n    paragraph: \"Lorem ipsum dolor sit amet1.\",\r\n  },\r\n  {\r\n    img: diaphragm,\r\n    title: \"Diaphragm\",\r\n    paragraph: \"Lorem ipsum dolor sit amet2.\",\r\n  },\r\n  {\r\n    img: money,\r\n    title: \"Affordable\",\r\n    paragraph: \"Lorem ipsum dolor sit amet3.\",\r\n  },\r\n  {\r\n    img: teamwork,\r\n    title: \"Teamwork\",\r\n    paragraph: \"Lorem ipsum dolor sit amet4.\",\r\n  },\r\n];\r\n\r\nconst Services: React.FC = () => {\r\n  const [ref, controls] = useScroll();\r\n  return (\r\n    <StyledServices\r\n      variants={scrollFade}\r\n      animate={controls}\r\n      initial=\"hidden\"\r\n      ref={ref}\r\n      data-testid=\"services-section\"\r\n    >\r\n      {/* <Description>\r\n        <h2 data-testid=\"services-title\">\r\n          High <span>quality</span> services\r\n        </h2>\r\n        <StyledCards>\r\n          {services.map(\r\n            ({ img, title, paragraph }: IService): React.ReactElement => (\r\n              <StyledCard key={title} data-testid=\"services-card\">\r\n                <div className=\"icon\">\r\n                  <img src={img} alt={title.toLocaleLowerCase()} />\r\n                  <h3>{title}</h3>\r\n                </div>\r\n                <p>{paragraph}</p>\r\n              </StyledCard>\r\n            )\r\n          )}\r\n        </StyledCards>\r\n      </Description>\r\n      <Image>\r\n        <img src={home2} alt=\"home2\" />\r\n      </Image> */}\r\n    </StyledServices>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n",["170","171"],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\AboutMe\\Services\\Styles.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\WorkDetails\\Styles.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\MyWork\\Styles.ts",[],["172","173"],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\PageSlider\\index.tsx",["174"],"import { forwardRef } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { IBaseComponentPropsWithMotion } from \"../types\";\r\nimport { PageTransition } from \"..\";\r\n\r\ntype IPageSliderProps = IBaseComponentPropsWithMotion;\r\n\r\ninterface IPageSliderContentProps extends IPageSliderProps {\r\n  shadow?: boolean;\r\n}\r\n\r\ninterface IPageSliderComp\r\n  extends React.ForwardRefExoticComponent<\r\n    IPageSliderProps & React.RefAttributes<HTMLDivElement>\r\n  > {\r\n  Title: React.FC<IPageSliderProps>;\r\n  Header: React.FC<IPageSliderProps>;\r\n  Text: React.FC<IPageSliderProps>;\r\n  Content: React.FC<IPageSliderContentProps>;\r\n}\r\n\r\nexport const StyledPageSlider = styled(motion.section)`\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  color: white;\r\n\r\n  @media (max-width: 1300px) {\r\n    display: block;\r\n    padding: 2rem 2rem;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const StyledTitle = styled(motion.div)`\r\n  position: absolute;\r\n  z-index: 999;\r\n  overflow: hidden;\r\n  top: 20%;\r\n  margin-left: 10%;\r\n\r\n  @media (max-width: 1300px) {\r\n    padding: 0;\r\n    h2 {\r\n      font-size: 4rem;\r\n    }\r\n    button {\r\n      margin: 2rem 0rem 5rem 0rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledHeader = styled(motion.h2)`\r\n  font-size: 8rem;\r\n  line-height: 1;\r\n  letter-spacing: 0.1em;\r\n  margin-bottom: 1.6rem;\r\n  font-weight: normal;\r\n  text-shadow: 2px 3px 16px rgb(0 0 0);\r\n`;\r\n\r\nexport const StyledContent = styled(motion.div)<{ shadow: boolean }>`\r\n  position: relative;\r\n  width: 60%;\r\n  height: 70vh;\r\n  overflow: hidden;\r\n  margin: 0px 8% 0 auto;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 2em;\r\n  /* box-shadow: ${(props) =>\r\n    props.shadow ? \"0 80px 140px -40px rgb(0 0 0 / 60%)\" : \"none\"}; */\r\n`;\r\n\r\nexport const StyledText = styled(motion.p)`\r\n  padding-bottom: 3rem;\r\n  color: #ccc;\r\n  font-size: 1.4rem;\r\n  line-height: 150%;\r\n`;\r\n\r\n/**\r\n * PageSlider\r\n *\r\n *  Component that utilizez the full page library\r\n */\r\nconst PageSlider = forwardRef<HTMLDivElement, IPageSliderProps>(\r\n  ({ children, classes, ...props }: IPageSliderProps, ref): JSX.Element => {\r\n    return (\r\n      <StyledPageSlider\r\n        ref={ref}\r\n        {...props}\r\n        className={classnames(\"page-slider\", classes)}\r\n      >\r\n        {children}\r\n      </StyledPageSlider>\r\n    );\r\n  }\r\n) as IPageSliderComp;\r\n\r\nconst Title = ({\r\n  children,\r\n  classes,\r\n  ...props\r\n}: IPageSliderProps): JSX.Element => (\r\n  <StyledTitle {...props} className={classnames(\"page-slider__title\", classes)}>\r\n    {children}\r\n  </StyledTitle>\r\n);\r\n\r\nconst Header = ({\r\n  children,\r\n  classes,\r\n  ...props\r\n}: IPageSliderProps): JSX.Element => {\r\n  return (\r\n    <StyledHeader\r\n      {...props}\r\n      className={classnames(\"page-slider__header\", classes)}\r\n    >\r\n      {children}\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nconst Text = ({\r\n  children,\r\n  classes,\r\n  ...props\r\n}: IPageSliderProps): JSX.Element => {\r\n  return (\r\n    <StyledText {...props} className={classnames(\"page-slider__text\", classes)}>\r\n      {children}\r\n    </StyledText>\r\n  );\r\n};\r\n\r\nconst Content = ({\r\n  children,\r\n  classes,\r\n  shadow = false,\r\n  ...props\r\n}: IPageSliderContentProps): JSX.Element => {\r\n  return (\r\n    <StyledContent\r\n      shadow={shadow}\r\n      {...props}\r\n      className={classnames(\"page-slider__content\", classes)}\r\n    >\r\n      {children}\r\n      {/* <PageTransition /> */}\r\n    </StyledContent>\r\n  );\r\n};\r\n\r\nPageSlider.Title = Title;\r\nPageSlider.Text = Text;\r\nPageSlider.Header = Header;\r\nPageSlider.Content = Content;\r\n\r\nexport default PageSlider;\r\n","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Button\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Card\\index.tsx",["175"],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Image\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Shadow\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Divider\\index.tsx",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":2,"column":18,"nodeType":"182","messageId":"183","endLine":2,"endColumn":27},{"ruleId":"184","severity":1,"message":"185","line":35,"column":9,"nodeType":"186","endLine":35,"endColumn":80},{"ruleId":"180","severity":1,"message":"187","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":12},{"ruleId":"180","severity":1,"message":"188","line":17,"column":10,"nodeType":"182","messageId":"183","endLine":17,"endColumn":16},{"ruleId":"180","severity":1,"message":"189","line":1,"column":10,"nodeType":"182","messageId":"183","endLine":1,"endColumn":16},{"ruleId":"180","severity":1,"message":"190","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":16},{"ruleId":"180","severity":1,"message":"191","line":1,"column":8,"nodeType":"182","messageId":"183","endLine":1,"endColumn":13},{"ruleId":"180","severity":1,"message":"192","line":2,"column":26,"nodeType":"182","messageId":"183","endLine":2,"endColumn":37},{"ruleId":"180","severity":1,"message":"193","line":2,"column":39,"nodeType":"182","messageId":"183","endLine":2,"endColumn":49},{"ruleId":"176","replacedBy":"194"},{"ruleId":"178","replacedBy":"195"},{"ruleId":"176","replacedBy":"196"},{"ruleId":"178","replacedBy":"197"},{"ruleId":"180","severity":1,"message":"198","line":6,"column":10,"nodeType":"182","messageId":"183","endLine":6,"endColumn":24},{"ruleId":"180","severity":1,"message":"199","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":18},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"@typescript-eslint/no-unused-vars","'ScrollTop' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Work' is defined but never used.","'motion' is defined but never used.","'Banner' is defined but never used.","'Services' is defined but never used.","'home2' is defined but never used.","'StyledCards' is defined but never used.","'StyledCard' is defined but never used.",["200"],["201"],["200"],["201"],"'PageTransition' is defined but never used.","'lineAnim' is defined but never used.","no-global-assign","no-unsafe-negation"]