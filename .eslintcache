[{"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\index.tsx":"1","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\reportWebVitals.ts":"2","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\App.tsx":"3","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\index.tsx":"4","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\index.tsx":"5","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\Styles.tsx":"6","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\index.tsx":"7","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\routes\\index.tsx":"8","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\shared\\GlobalStyles.ts":"9","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\navLinks.ts":"10","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\shared\\animation.ts":"11","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Wave\\index.tsx":"12","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Wave\\Styles.tsx":"13","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\PageTransition\\index.tsx":"14","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\WorkDetails\\index.tsx":"15","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Banner\\index.tsx":"16","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Parallax\\index.tsx":"17","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\About\\index.tsx":"18","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\index.tsx":"19","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\MyWork\\index.tsx":"20","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\ContactUs\\index.tsx":"21","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\AboutMe\\index.tsx":"22","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\WorkDetails\\Styles.ts":"23","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\PageSlider\\index.tsx":"24","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Button\\index.tsx":"25","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Card\\index.tsx":"26","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Image\\index.tsx":"27","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Divider\\index.tsx":"28","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Button\\styles.ts":"29","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Divider\\styles.ts":"30","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Card\\styles.ts":"31","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Image\\styles.ts":"32","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\styles.tsx":"33","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\PageSlider\\styles.ts":"34","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\shared\\helpers.ts":"35","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\Intro\\index.tsx":"36","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\hooks\\useScroll.ts":"37","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\CardList.tsx":"38","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\CardGallery.tsx":"39"},{"size":910,"mtime":1610925234400,"results":"40","hashOfConfig":"41"},{"size":425,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":335,"mtime":1629142732450,"results":"43","hashOfConfig":"41"},{"size":495,"mtime":1629142685769,"results":"44","hashOfConfig":"41"},{"size":1380,"mtime":1629249945909,"results":"45","hashOfConfig":"41"},{"size":875,"mtime":1628664686623,"results":"46","hashOfConfig":"41"},{"size":146,"mtime":1627786293857,"results":"47","hashOfConfig":"41"},{"size":766,"mtime":1628834233219,"results":"48","hashOfConfig":"41"},{"size":4398,"mtime":1629233266790,"results":"49","hashOfConfig":"41"},{"size":358,"mtime":1629235532428,"results":"50","hashOfConfig":"41"},{"size":3084,"mtime":1629254390475,"results":"51","hashOfConfig":"41"},{"size":720,"mtime":1629245887436,"results":"52","hashOfConfig":"41"},{"size":176,"mtime":1628238013472,"results":"53","hashOfConfig":"41"},{"size":684,"mtime":1628373954259,"results":"54","hashOfConfig":"41"},{"size":1269,"mtime":1628104661879,"results":"55","hashOfConfig":"41"},{"size":1775,"mtime":1629142713087,"results":"56","hashOfConfig":"41"},{"size":1607,"mtime":1627596712833,"results":"57","hashOfConfig":"41"},{"size":3253,"mtime":1629161494954,"results":"58","hashOfConfig":"41"},{"size":1070,"mtime":1629244978147,"results":"59","hashOfConfig":"41"},{"size":3373,"mtime":1629161555932,"results":"60","hashOfConfig":"41"},{"size":1555,"mtime":1629250884447,"results":"61","hashOfConfig":"41"},{"size":480,"mtime":1628888588899,"results":"62","hashOfConfig":"41"},{"size":491,"mtime":1627790562741,"results":"63","hashOfConfig":"41"},{"size":1795,"mtime":1629089467556,"results":"64","hashOfConfig":"41"},{"size":513,"mtime":1629014595392,"results":"65","hashOfConfig":"41"},{"size":1624,"mtime":1629159393119,"results":"66","hashOfConfig":"41"},{"size":448,"mtime":1628918020296,"results":"67","hashOfConfig":"41"},{"size":363,"mtime":1628917008491,"results":"68","hashOfConfig":"41"},{"size":720,"mtime":1629001372057,"results":"69","hashOfConfig":"41"},{"size":244,"mtime":1629011132703,"results":"70","hashOfConfig":"41"},{"size":2315,"mtime":1629233157143,"results":"71","hashOfConfig":"41"},{"size":2171,"mtime":1629014903378,"results":"72","hashOfConfig":"41"},{"size":1054,"mtime":1629254572447,"results":"73","hashOfConfig":"41"},{"size":1897,"mtime":1629250838862,"results":"74","hashOfConfig":"41"},{"size":121,"mtime":1628664528562,"results":"75","hashOfConfig":"41"},{"size":1631,"mtime":1629254374462,"results":"76","hashOfConfig":"41"},{"size":543,"mtime":1628894052441,"results":"77","hashOfConfig":"41"},{"size":2487,"mtime":1629142712680,"results":"78","hashOfConfig":"41"},{"size":4161,"mtime":1629256251865,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"a4yxhs",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\index.tsx",[],["165","166"],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\reportWebVitals.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\App.tsx",["167"],"import Routes from \"./routes\";\nimport { Navbar, Wave } from \"./components\";\nimport GlobalStyle from \"./shared/GlobalStyles\";\n\nfunction App() {\n  console.log(process.env.NODE_ENV);\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Navbar />\n      {/* <Wave /> */}\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\Styles.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\routes\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\shared\\GlobalStyles.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\navLinks.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\shared\\animation.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Wave\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Wave\\Styles.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\PageTransition\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\WorkDetails\\index.tsx",["168"],"import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { projects } from \"../Home/MyWork\";\r\nimport { IProject } from \"../Home/MyWork/types\";\r\nimport { Details, HeadLine, Description } from \"./Styles\";\r\nimport { pageAnimation } from \"../../shared/animation\";\r\n\r\nconst WorkDetails: React.FC = () => {\r\n  const { id } = useParams<Record<string, string>>();\r\n  const [myProjects, setProjects] = useState<Array<IProject>>();\r\n  const [currentProject, setCurrentProject] = useState<IProject>();\r\n\r\n  useEffect(() => {\r\n    setProjects(projects);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (myProjects) {\r\n      setCurrentProject(myProjects?.find((project) => project.id === id));\r\n    }\r\n  }, [myProjects, id]);\r\n\r\n  if (!myProjects) return null;\r\n\r\n  return (\r\n    <Details\r\n      variants={pageAnimation}\r\n      initial=\"hidden\"\r\n      animate=\"show\"\r\n      exit=\"exit\"\r\n      data-testid=\"project-details-section\"\r\n    >\r\n      <HeadLine>\r\n        <h2>{currentProject?.title}</h2>\r\n        <img src={currentProject?.image.src} alt={currentProject?.image.alt} />\r\n      </HeadLine>\r\n      <Description>\r\n        <p>{currentProject?.description}</p>\r\n      </Description>\r\n    </Details>\r\n  );\r\n};\r\n\r\nexport default WorkDetails;\r\n","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Banner\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Parallax\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\About\\index.tsx",["169","170","171","172"],"import { useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { Divider, PageSlider } from \"../../../components\";\r\nimport CardList from \"../CardList\";\r\nimport {\r\n  fullpageAnimation,\r\n  contentAnim,\r\n  titleAnim,\r\n  lineAnim,\r\n} from \"../../../shared/animation\";\r\nimport athlete from \"../../../assets/img/athlete2.png\";\r\nimport theracer from \"../../../assets/img/the-racer2.jpg\";\r\nimport useScroll from \"../../../hooks/useScroll\";\r\n\r\n// TODO: change to include personal projects\r\nexport const projects = [\r\n  {\r\n    id: \"aboutme\",\r\n    title: \"About Me\",\r\n    themeColor: \"#00ff00\",\r\n    techStack: [\r\n      \"react\",\r\n      \"typescript\",\r\n      \"styled components\",\r\n      \"jest/react-testing-library\",\r\n      \"accessibility\",\r\n      \"webpack\",\r\n    ],\r\n    image: {\r\n      src: athlete,\r\n      alt: \"athlete\",\r\n    },\r\n    preview: \"This is a preview project\",\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n  },\r\n  {\r\n    id: \"skills\",\r\n    title: \"Skills\",\r\n    themeColor: \"#ff0000\",\r\n    techStack: [\r\n      \"react\",\r\n      \"typescript\",\r\n      \"styled components\",\r\n      \"jest/react-testing-library\",\r\n      \"accessibility\",\r\n      \"webpack\",\r\n    ],\r\n    image: {\r\n      src: theracer,\r\n      alt: \"racer\",\r\n    },\r\n    preview: \"This is a preview project\",\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n  },\r\n];\r\n\r\nconst About = () => {\r\n  const [ref, controls, inView] = useScroll();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <PageSlider\r\n      ref={ref}\r\n      variants={fullpageAnimation}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n    >\r\n      <PageSlider.Title>\r\n        <PageSlider.Header variants={titleAnim}>About Me</PageSlider.Header>\r\n        <PageSlider.SubHeader variants={titleAnim}>\r\n          Software Developer\r\n        </PageSlider.SubHeader>\r\n      </PageSlider.Title>\r\n      <PageSlider.Content\r\n        animate={controls}\r\n        initial=\"hidden\"\r\n        variants={contentAnim}\r\n      >\r\n        <CardList history={history} projects={projects} inView={inView} />\r\n      </PageSlider.Content>\r\n    </PageSlider>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\MyWork\\index.tsx",["173","174","175","176","177"],"import { Divider, PageSlider } from \"../../../components\";\r\nimport {\r\n  fullpageAnimation,\r\n  contentAnim,\r\n  titleAnim,\r\n  lineAnim,\r\n} from \"../../../shared/animation\";\r\nimport { IProject } from \"./types\";\r\nimport athlete from \"../../../assets/img/athlete-small.png\";\r\nimport theracer from \"../../../assets/img/theracer-small.png\";\r\nimport CardList from \"../CardList\";\r\nimport useScroll from \"../../../hooks/useScroll\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CardGallery from \"../CardGallery\";\r\n\r\n// TODO: change to include personal projects\r\nexport const projects: IProject[] = [\r\n  {\r\n    id: \"athlete\",\r\n    title: \"The Athlete\",\r\n    themeColor: \"#ff0055\",\r\n    techStack: [\r\n      \"react\",\r\n      \"typescript\",\r\n      \"styled components\",\r\n      \"jest/react-testing-library\",\r\n      \"accessibility\",\r\n      \"webpack\",\r\n    ],\r\n    image: {\r\n      src: athlete,\r\n      alt: \"athlete\",\r\n    },\r\n    preview: \"This is a preview project\",\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n  },\r\n  {\r\n    id: \"racer\",\r\n    title: \"The Racer\",\r\n    themeColor: \"#0099ff\",\r\n    techStack: [\r\n      \"react\",\r\n      \"typescript\",\r\n      \"styled components\",\r\n      \"jest/react-testing-library\",\r\n      \"accessibility\",\r\n      \"webpack\",\r\n    ],\r\n    image: {\r\n      src: theracer,\r\n      alt: \"racer\",\r\n    },\r\n    preview: \"This is a preview project\",\r\n    description:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n  },\r\n];\r\n\r\n// sdfsdf\r\nconst MyWork = () => {\r\n  const [ref, controls, inView] = useScroll();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <PageSlider\r\n      ref={ref}\r\n      variants={fullpageAnimation}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n    >\r\n      <PageSlider.Title>\r\n        <PageSlider.Header variants={titleAnim}>Projects</PageSlider.Header>\r\n        <PageSlider.SubHeader variants={titleAnim}>\r\n          Most recent work\r\n        </PageSlider.SubHeader>\r\n      </PageSlider.Title>\r\n      <PageSlider.Content\r\n        animate={controls}\r\n        initial=\"hidden\"\r\n        variants={contentAnim}\r\n      >\r\n        {/* <CardList history={history} projects={projects} inView={inView} /> */}\r\n        <CardGallery projects={projects} />\r\n      </PageSlider.Content>\r\n    </PageSlider>\r\n  );\r\n};\r\n\r\nexport default MyWork;\r\n","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\ContactUs\\index.tsx",["178","179"],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\AboutMe\\index.tsx",["180"],"import { Banner } from \"../../components\";\r\nimport { pageAnimation } from \"../../shared/animation\";\r\nimport { Details, HeadLine } from \"../WorkDetails/Styles\";\r\n\r\nconst AboutMe = () => {\r\n  return (\r\n    <Details\r\n      variants={pageAnimation}\r\n      initial=\"hidden\"\r\n      animate=\"show\"\r\n      exit=\"exit\"\r\n      data-testid=\"project-details-section\"\r\n    >\r\n      <HeadLine>\r\n        <h2>About Me</h2>\r\n      </HeadLine>\r\n    </Details>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\WorkDetails\\Styles.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\PageSlider\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Button\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Card\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Image\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Divider\\index.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Button\\styles.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Divider\\styles.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Card\\styles.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Image\\styles.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\Navbar\\styles.tsx",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\components\\PageSlider\\styles.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\shared\\helpers.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\Intro\\index.tsx",["181","182"],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\hooks\\useScroll.ts",[],"C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\CardList.tsx",["183","184"],"import { AnimateSharedLayout } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Card, Divider } from \"../../components\";\r\nimport { cardAnim, lineAnim, springType } from \"../../shared/animation\";\r\nimport { setImageAnimClass } from \"../../shared/helpers\";\r\nimport { IProject } from \"./MyWork/types\";\r\n\r\nexport interface ICardListProps {\r\n  projects: IProject[];\r\n  inView: boolean;\r\n  history: RouteComponentProps[\"history\"];\r\n}\r\n\r\nconst CardList = ({ projects, inView, history }: ICardListProps) => {\r\n  const [hovered, setHovered] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setHovered(projects[0].id);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  return (\r\n    <AnimateSharedLayout>\r\n      <Card.Group>\r\n        {projects?.map(({ title, image, id, preview, themeColor }) => {\r\n          const isHovered = hovered === id;\r\n\r\n          return (\r\n            <Card\r\n              key={id}\r\n              id={id}\r\n              color={themeColor}\r\n              isHovered={isHovered}\r\n              onMouseOver={() => setHovered(id)}\r\n              animate={isHovered ? \"show\" : \"hidden\"}\r\n              style={{ zIndex: isHovered ? 1 : 0 }}\r\n              initial=\"hidden\"\r\n              variants={cardAnim}\r\n              image={image}\r\n            >\r\n              {/* <Card.Image\r\n                src={image.src}\r\n                alt={image.alt}\r\n                classes={setImageAnimClass(inView)}\r\n              /> */}\r\n              {isHovered && (\r\n                <Card.Content\r\n                  classes=\"outline\"\r\n                  layoutId=\"outline\"\r\n                  // animate={{ borderColor: \"#000\" }}\r\n                  transition={springType}\r\n                >\r\n                  <Card.Header>{title}</Card.Header>\r\n                  <Divider\r\n                    width={100}\r\n                    color={themeColor}\r\n                    variants={lineAnim}\r\n                    initial=\"hidden\"\r\n                  />\r\n                  <Card.Body>{preview}</Card.Body>\r\n                  <Card.Button\r\n                    color={themeColor}\r\n                    onClick={() => history.push(`work/${id}`)}\r\n                  >\r\n                    🠚\r\n                  </Card.Button>\r\n                </Card.Content>\r\n              )}\r\n            </Card>\r\n          );\r\n        })}\r\n      </Card.Group>\r\n    </AnimateSharedLayout>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","C:\\Users\\nfz32\\Documents\\projects\\dev-portfolio\\src\\pages\\Home\\CardGallery.tsx",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":2,"column":18,"nodeType":"191","messageId":"192","endLine":2,"endColumn":22},{"ruleId":"193","severity":1,"message":"194","line":35,"column":9,"nodeType":"195","endLine":35,"endColumn":80},{"ruleId":"189","severity":1,"message":"196","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":18},{"ruleId":"189","severity":1,"message":"197","line":2,"column":22,"nodeType":"191","messageId":"192","endLine":2,"endColumn":35},{"ruleId":"189","severity":1,"message":"198","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":17},{"ruleId":"189","severity":1,"message":"199","line":9,"column":3,"nodeType":"191","messageId":"192","endLine":9,"endColumn":11},{"ruleId":"189","severity":1,"message":"198","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":17},{"ruleId":"189","severity":1,"message":"199","line":6,"column":3,"nodeType":"191","messageId":"192","endLine":6,"endColumn":11},{"ruleId":"189","severity":1,"message":"200","line":11,"column":8,"nodeType":"191","messageId":"192","endLine":11,"endColumn":16},{"ruleId":"189","severity":1,"message":"201","line":62,"column":25,"nodeType":"191","messageId":"192","endLine":62,"endColumn":31},{"ruleId":"189","severity":1,"message":"202","line":63,"column":9,"nodeType":"191","messageId":"192","endLine":63,"endColumn":16},{"ruleId":"189","severity":1,"message":"199","line":3,"column":3,"nodeType":"191","messageId":"192","endLine":3,"endColumn":11},{"ruleId":"189","severity":1,"message":"198","line":8,"column":29,"nodeType":"191","messageId":"192","endLine":8,"endColumn":36},{"ruleId":"189","severity":1,"message":"203","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":16},{"ruleId":"189","severity":1,"message":"198","line":1,"column":37,"nodeType":"191","messageId":"192","endLine":1,"endColumn":44},{"ruleId":"189","severity":1,"message":"199","line":6,"column":3,"nodeType":"191","messageId":"192","endLine":6,"endColumn":11},{"ruleId":"189","severity":1,"message":"204","line":6,"column":10,"nodeType":"191","messageId":"192","endLine":6,"endColumn":27},{"ruleId":"205","severity":1,"message":"206","line":22,"column":6,"nodeType":"207","endLine":22,"endColumn":8,"suggestions":"208"},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"@typescript-eslint/no-unused-vars","'Wave' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","'useRouteMatch' is defined but never used.","'Divider' is defined but never used.","'lineAnim' is defined but never used.","'CardList' is defined but never used.","'inView' is assigned a value but never used.","'history' is assigned a value but never used.","'Banner' is defined but never used.","'setImageAnimClass' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'projects'. Either include it or remove the dependency array. If 'setHovered' needs the current value of 'projects', you can also switch to useReducer instead of useState and read 'projects' in the reducer.","ArrayExpression",["211"],"no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},"Update the dependencies array to be: [projects]",{"range":"214","text":"215"},[736,738],"[projects]"]